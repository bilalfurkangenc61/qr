@model qr.Models.ContactInfo

@{
    ViewData["Title"] = "vCard QR Generator";
    string[] deptLines = Array.Empty<string>();

    // Model.Department'ı öncelikle temizliyoruz; böylece hem select hem önizleme aynı temiz verilere dayanır.
    string sanitizedDept = SanitizeDepartment(Model?.Department ?? string.Empty);

    // Uzun isimlerin listesi — tam eşleşme ile kontrol edilecek (trim, case-insensitive)
    var longDepartments = new[]
    {
        "Proje ve Yazılım Uygulama Yönetimi Md. İş Analizi ve Yazılım",
        "Proje ve Yazılım Uygulama Yönetimi Md. Proje ve Süreç Yönetimi",
        "İnsan Kaynakları Organizasyon ve Performans Yönetimi Md. İdari İşler",
        "Finansal Yönetim İnsan Kaynakları ve İdari İşler Genel Müdür Yardımcılığı",
        "Finansal Muhasebe ve Vergi Yönetimi Md. Finansal Muhasebe ve Bütçe Yönetimi"
    };

    // Belirli isim için vurgulama (istemci tarafında da LastName büyük yazılıyor, sunucu tarafında case-insensitive karşılaştırma kullanıyoruz)
    bool isHighlightedName = false;
    if (Model != null)
    {
        var fullName = (Model.FirstName + " " + Model.LastName).Trim();
        isHighlightedName = string.Equals(fullName, "Bilal Furkan GENÇ", StringComparison.InvariantCultureIgnoreCase);
    }

    if (!string.IsNullOrWhiteSpace(sanitizedDept))
    {
        if (longDepartments.Any(ld => string.Equals(ld, sanitizedDept, StringComparison.InvariantCultureIgnoreCase)))
        {
            // Belirtilen uzun isimler için 3 satıra böl
            deptLines = SplitIntoLines(sanitizedDept, 3);
        }
        else
        {
            var words = sanitizedDept.Split(' ', StringSplitOptions.RemoveEmptyEntries);
            if (words.Length <= 3)
            {
                // Kısa (1-3 kelime) isimleri tek satırda tut (önceki sürümde kelimeler ayrı satırlara konuyordu)
                deptLines = new[] { sanitizedDept };
            }
            else
            {
                // Diğerleri için maksimum 2 satıra bölüyoruz (yan yana gösterim için tek satır prefer edilebilir)
                int chunk = (int)Math.Ceiling(words.Length / 2.0);
                var line1 = string.Join(' ', words.Take(chunk));
                var line2 = string.Join(' ', words.Skip(chunk));
                deptLines = new[] { line1, line2 }.Where(s => !string.IsNullOrWhiteSpace(s)).ToArray();
            }
        }
    }
}


<style>
    .qr-container {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 2rem 0;
    }

    .card-custom {
        border: none;
        border-radius: 20px;
        box-shadow: 0 10px 25px rgba(50, 50, 93, 0.1);
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        margin-top: 10px;
    }

    .card-header-custom {
        background: linear-gradient(135deg, #4f86f7 0%, #2c5aa0 100%);
        color: white;
        border-radius: 20px 20px 0 0 !important;
        padding: 1rem;
        border: none;
    }

    #LastName {
        text-transform: uppercase;
    }

    .preview-card {
        background-color: #ffffff;
        border-radius: 12px;
        box-shadow: 0 4px 16px rgba(0,0,0,0.08);
        display: flex;
        justify-content: space-between;
        align-items: stretch;
        padding: 18px;
        gap: 18px;
        width: 100%;
        max-width: 520px;
        min-height: 180px;
        margin-bottom: 10px;
        position: relative;
        overflow: visible;
    }

    .preview-left-section {
        flex: 1;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        margin-bottom: 10px;
    }

    .preview-logo-section {
        width: 200%;
        display: flex;
        justify-content: flex-start;
        align-items: center;
    }

    .preview-logo {
        width: auto;
        height: 70px;
        max-width: 100%;
        object-fit: contain;
    }

    .preview-info-col {
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        gap: 8px;
        margin-left: 10px;
    }

    .preview-name {
        font-weight: bold;
        color: #1a50bc;
        margin: 0;
        line-height: 1.2;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        font-family: Arial;
        font-size: 10px;
    }

    /* Eğer isim Bilal Furkan GENÇ ise extra sınıfla büyüt */
    .preview-name.preview-name-large {
        font-size: 1.45rem;
        line-height: 1.1;
        letter-spacing: 0.2px;
    }

    /* download-card içindeki isim için de vurguyu güçlendir */
    #download-card .preview-name.preview-name-large {
        font-size: 1.15rem !important;
    }

    /* Burada white-space ve overflow ayarlarını değiştiriyoruz: metnin kırılıp tam görünmesini sağlamak için */
    .preview-dept, .preview-title {
        color: #1565c0;
        margin: 0;
        font-weight: 400;
        line-height: 1.1;
        white-space: normal;
        overflow: visible;
        text-overflow: clip;
        font-family: Arial;
        font-size: 12px;
    }

    .preview-phone {
        font-size: 0.92rem;
        margin: 0;
        word-break: break-all;
        line-height: 1;
        display: flex;
        align-items: center;
        gap: 5px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 100%;
        margin-bottom: 10px;
        margin-left: 60px;
    }

    .preview-email a {
        color: #1565c0;
        text-decoration: underline;
        word-break: break-all;
        white-space: normal;
        display: inline-block;
        max-width: 100%;
        margin-right: 10px;
    }

        .preview-email a:hover {
            text-decoration: underline;
        }

    .preview-email i, .preview-phone i {
        color: #1565c0;
        width: 16px;
        flex-shrink: 0;
    }

    .preview-qr {
        flex: 0 0 180px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-top: 10px;
        border-radius: 8px;
    }

        .preview-qr img {
            width: 110%;
            height: auto;
            max-width: 600px;
            object-fit: contain;
            border-radius: 4px;
            image-rendering: -webkit-optimize-contrast;
            image-rendering: crisp-edges;
            image-rendering: pixelated;
        }

    @@media (max-width: 768px) {
        .preview-card {
            flex-direction: column;
            align-items: center;
            text-align: center;
            min-height: auto;
            padding: 20px;
        }

        .preview-left-section {
            width: 100%;
            text-align: center;
            gap: 20px;
            justify-content: flex-start;
        }

        .preview-logo-section {
            justify-content: center;
        }

        .preview-qr {
            flex: none;
            width: 200px;
            height: 200px;
        }

            .preview-qr img {
                max-width: 180px;
                max-height: 180px;
            }

        .preview-email, .preview-phone {
            justify-content: center;
        }

        .preview-logo {
            height: 65px;
        }

        .preview-card {
            min-width: 400px;
        }
    }

    .preview-card {
        position: relative;
        overflow: visible;
    }

    @@media print {
        .preview-card {
            page-break-inside: avoid;
            -webkit-print-color-adjust: exact;
            color-adjust: exact;
        }
    }

    #download-card {
        background-color: #ffffff !important;
        width: 600px;
        min-width: 600px;
        max-width: 600px;
        height: auto;
        min-height: 210px;
        padding: 10px;
        gap: 8px;
        overflow: hidden;
        display: flex;
        align-items: stretch;
    }

        #download-card .preview-qr {
            flex: 0 0 160px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-top: 0;
        }

            #download-card .preview-qr img {
                width: 100% !important;
                max-width: 160px;
                height: auto !important;
                object-fit: contain;
            }

        #download-card .preview-left-section {
            flex: 1 1 auto;
            min-width: 0;
        }

        #download-card .preview-email,
        #download-card .preview-phone {
            max-width: calc(100% - 200px);
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

    @@media (max-width: 768px) {
        #download-card {
            width: 430px;
            min-width: 430px;
            max-width: 100%;
        }

            #download-card .preview-qr {
                flex: 0 0 120px;
            }

                #download-card .preview-qr img {
                    max-width: 120px;
                }

            #download-card .preview-email,
            #download-card .preview-phone {
                max-width: calc(100% - 120px);
                white-space: normal;
            }
    }

    #download-card .centered-info-block {
        width: 100%;
        text-align: center;
        margin-top: 8px;
        margin-bottom: 4px;
        display: flex;
        flex-direction: column;
        gap: 2px;
        margin-right: 60px;
    }

    .mavi-numara {
        color: #1565c0 !important;
    }

    #download-card {
        background-color: #ffffff !important;
        width: 600px;
        height: auto;
        min-width: 600px;
        max-width: 600px;
        padding: 10px;
        gap: 8px;
        overflow: hidden;
        display: flex;
        align-items: stretch;
    }

        #download-card .preview-left-section {
            margin-bottom: 0;
            gap: 2px;
            flex: 1;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        #download-card .preview-logo {
            height: 50px;
            width: auto;
            max-height: 40px;
            object-fit: contain;
        }

        #download-card .preview-logo {
            height: 50px;
        }

        #download-card .preview-name {
            font-size: 0.95rem;
            line-height: 1.15;
        }

        #download-card .preview-dept,
        #download-card .preview-title {
            font-size: 0.86rem;
            line-height: 1.2;
            white-space: normal;
            overflow: visible;
            text-overflow: clip;
        }

        #download-card .preview-info-col {
            gap: 1px;
            margin-top: auto;
        }

        #download-card .preview-email,
        #download-card .preview-phone {
            font-size: 0.9rem;
            line-height: 1.35;
            margin-left: 0;
            gap: 6px;
            max-width: 100%;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

            #download-card .preview-email i,
            #download-card .preview-phone i {
                width: 14px;
                font-size: 0.9rem;
            }

        #download-card .preview-qr {
            flex: 0 0 180px;
            margin-top: 0;
            align-items: stretch;
            justify-content: center;
            display: flex;
        }

            #download-card .preview-qr img {
                width: 100% !important;
                height: 100% !important;
                max-width: 180px;
                max-height: none;
                object-fit: contain;
                image-rendering: -webkit-optimize-contrast;
                image-rendering: crisp-edges;
            }

    @@media (max-width: 768px) {
        #download-card {
            min-width: 430px;
            width: 430px;
        }
    }

    #download-card .centered-info-block {
        margin-right: 0;
    }

    #download-card {
        gap: 8px;
    }

        #download-card .preview-logo-section {
            width: 100%;
        }

        #download-card .preview-logo {
            display: block;
            width: 100%;
            height: auto;
            max-height: 52px;
            object-fit: contain;
        }

        #download-card .bottom-info-section {
            display: flex;
            flex-direction: column;
            gap: 2px;
            flex-grow: 1;
        }

        #download-card .preview-info-col {
            gap: 2px;
            margin-top: auto;
        }

        #download-card .preview-email.long-mail a {
            font-size: 9px;
            letter-spacing: -0.5px;
        }

        #download-card .preview-dept {
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: normal;
            line-height: 1.1;
            max-height: calc(1.1em * 2);
            margin-bottom: 4px;
        }

        #download-card .preview-info-col {
            gap: 4px;
            align-items: flex-start;
        }

        #download-card .preview-email,
        #download-card .preview-phone {
            margin-left: 10px;
        }

            #download-card .preview-email a {
                white-space: normal;
                word-break: break-word;
            }

        #download-card .preview-left-section {
            overflow: visible;
        }

        #download-card .preview-name {
            display: inline-block;
            overflow: visible;
            white-space: nowrap;
            line-height: 1.25;
            padding-bottom: 2px;
            vertical-align: middle;
        }

    #download-card {
        overflow: visible !important;
        padding-bottom: 6px !important;
    }

        #download-card .preview-left-section {
            overflow: visible !important;
            padding-bottom: 2px;
        }

        #download-card .preview-name {
            display: inline-block;
            overflow: visible !important;
            white-space: nowrap;
            line-height: 1.35 !important;
            padding-bottom: 4px !important;
        }

        #download-card,
        #download-card .preview-left-section,
        #download-card .bottom-info-section,
        #download-card .centered_info_block,
        .preview_card {
            overflow: visible !important;
            transform: none !important;
            -webkit-transform: none !important;
            box-sizing: border-box !important;
        }

    #download-card {
        padding-bottom: 10px !important;
    }

        #download-card .preview-name {
            display: inline-block !important;
            overflow: visible !important;
            line-height: 1.35 !important;
            padding-bottom: 6px !important;
            vertical-align: baseline !important;
        }

        #download-card, #download-card * {
            clip-path: none !important;
            -webkit-clip-path: none !important;
            mask: none !important;
            -webkit-mask: none !important;
        }

    /* mevcut stiller korunur; preview-dept için iki yardımcı sınıf eklendi */
    .preview-dept .dept-inline {
        display: inline-block;
        white-space: nowrap;
        overflow: visible;
        text-overflow: clip;
    }
    .preview-dept .dept-line {
        display: block;
        white-space: normal;
    }
</style>

<div class="qr-container">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8 col-xl-7">
                <div class="card card-custom">
                    <div class="card-header card-header-custom text-center">
                        <h2 class="mb-0">
                            <a class="navbar-brand mx-auto" asp-area="" asp-controller="Qr" asp-action="Index" style="height: 60px;">
                                <img src="~/LOGO.png" alt="Ödeme Sistemi" style="height: 50px; width:150px;">
                            </a>
                        </h2>
                        <p class="mb-0 mt-2 opacity-75">Halk Elektronik Para ve Ödeme Hizmetleri İmza Oluşturucu</p>
                    </div>
                    <div class="card-body p-4">
                        <form id="qr-form" asp-controller="Qr" asp-action="Generate" method="post">
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label asp-for="FirstName" class="form-label fw-bold text-primary">İsim *</label>
                                    <input asp-for="FirstName" class="form-control" required />
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label asp-for="LastName" class="form-label fw-bold text-primary">Soyisim *</label>
                                    <input asp-for="LastName" class="form-control" required />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label asp-for="Department" class="form-label fw-bold text-primary">Müdürlük</label>
                                    <select asp-for="Department" class="form-select">
                                        <option value="">Seçiniz</option>
                                        @foreach (var dept in ViewBag.Departments as List<string>)
                                        {
                                            <option value="@dept">@dept</option>
                                        }
                                    </select>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label asp-for="Title" class="form-label fw-bold text-primary">Ünvan *</label>
                                    <select asp-for="Title" class="form-select" required>
                                        <option value="">Seçiniz</option>
                                        @foreach (var title in ViewBag.Titles as List<string>)
                                        {
                                            <option value="@title">@title</option>
                                        }
                                    </select>
                                </div>

                            </div>

                            <div class="row">

                                <div class="col-md-6 mb-3">

                                    <label asp-for="MobilePhone" class="form-label fw-bold text-primary">Cep</label>

                                    <input asp-for="MobilePhone" class="form-control" placeholder="05XX XXX XX XX" maxlength="14" />

                                </div>

                                <div class="col-md-6 mb-3">

                                    <label asp-for="LandlinePhone" class="form-label fw-bold text-primary">Sabit</label>

                                    <input asp-for="LandlinePhone" class="form-control" placeholder="0XXX XXX XX XX" maxlength="14" />

                                </div>

                            </div>

                            <div class="row">

                                <div class="col-md-6 mb-3">

                                    <label asp-for="Email" class="form-label fw-bold text-primary">E-posta *</label>

                                    <input asp-for="Email" class="form-control" type="email" />

                                </div>

                                <div class="col-md-6 mb-3">

                                    <label asp-for="OutputType" class="form-label fw-bold text-primary">Format</label>

                                    <select asp-for="OutputType" class="form-select">

                                        <option value="PNG">PNG</option>

                                        <option value="SVG">SVG</option>

                                    </select>

                                </div>

                            </div>

                            <div class="text-center mt-3">

                                <button type="submit" class="btn btn-primary btn-lg px-5">İmza Oluştur</button>

                            </div>

                        </form>

                        @if (ViewBag.IsGenerated == true)
                        {
                            <hr class="my-4">

                            <div class="preview-card" id="download-card">
                                <div class="preview-left-section">

                                    <div class="preview-logo-section">
                                        <img src="~/HALKODE_LOGO-01.png" alt="Deneme" class="preview-logo" crossorigin="anonymous" />
                                    </div>

                                    <div class="bottom-info-section">
                                        <div class="centered-info-block">
                                            <div class="preview-name @(isHighlightedName ? "preview-name-large" : "")">@Model.FirstName @Model.LastName</div>
                                            <div class="preview-dept">
                                                @if (deptLines.Length > 1)
                                                {
                                                    foreach (var line in deptLines)
                                                    {
                                                        <div class="dept-line">@line</div>
                                                    }
                                                }
                                                else
                                                {
                                                    <div class="dept-inline">@sanitizedDept</div>
                                                }
                                            </div>
                                            <div class="preview-title">@Model.Title</div>
                                        </div>

                                        <div class="preview-info-col">
                                            <div class="preview-email">
                                                <i class="far fa-envelope" aria-hidden="true"></i>
                                                <a href="mailto:@Model.Email">@Model.Email</a>
                                            </div>
                                            <div class="preview-phone">
                                                <i class="fas fa-phone"></i>
                                                <span class="mavi-numara">
                                                    @if (!string.IsNullOrWhiteSpace(Model.LandlinePhone))
                                                    {
                                                        @FormatPhoneNumberForDisplay(Model.LandlinePhone)
                                                    }
                                                    @if (!string.IsNullOrWhiteSpace(Model.LandlinePhone) && !string.IsNullOrWhiteSpace(Model.MobilePhone))
                                                    {
                                                        <span> – </span>
                                                    }
                                                    @if (!string.IsNullOrWhiteSpace(Model.MobilePhone))
                                                    {
                                                        @FormatPhoneNumberForDisplay(Model.MobilePhone)
                                                    }
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="preview-qr">
                                    <img src="@ViewBag.QrImageData" alt="vCard QR Code" crossorigin="anonymous" />
                                </div>
                            </div>

                            <div class="text-center mt-3">
                                <button id="download-btn" class="btn btn-outline-primary">
                                    <i class="fas fa-download me-2"></i> İmza'yı İndir
                                </button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .centered-info-block {
        width: 100%;
        text-align: center;
        margin-top: 8px;
        margin-bottom: 4px;
        display: flex;
        flex-direction: column;
        gap: 2px;
        margin-right: 60px;
    }

    .mavi-numara {
        color: #1565c0 !important;
    }

    #download-card {
        background-color: #ffffff !important;
        width: 520px;
        height: auto;
        min-width: 520px;
        max-width: 520px;
        padding: 10px;
        gap: 8px;
        overflow: hidden;
        display: flex;
        align-items: stretch;
    }

        #download-card .preview-left-section {
            margin-bottom: 0;
            gap: 2px;
            flex: 1;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        #download_card .preview-logo {
            height: 40px;
            width: auto;
            max-height: 40px;
            object-fit: contain;
        }

        #download-card .preview-logo {
            height: 40px;
        }

        #download-card .preview-name {
            font-size: 0.95rem;
            line-height: 1.15;
        }

        #download-card .preview-dept,
        #download-card .preview-title {
            font-size: 0.86rem;
            line-height: 1.2;
            white-space: normal;
            overflow: visible;
            text-overflow: clip;
        }

        #download-card .preview-info-col {
            gap: 1px;
            margin-top: auto;
        }

        #download-card .preview-email,
        #download_card .preview-phone {
            font-size: 0.9rem;
            line-height: 1.17rem;
            margin-left: 20px;
            gap: 6px;
            max-width: 100%;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

            #download-card .preview-email i,
            #download_card .preview-phone i {
                width: 14px;
                font-size: 0.9rem;
            }

        #download-card .preview-qr {
            flex: 0 0 180px;
            margin-top: 0;
            align-items: stretch;
            justify-content: center;
            display: flex;
        }

            #download-card .preview-qr img {
                width: 100% !important;
                height: 100% !important;
                max-width: 180px;
                max-height: none;
                object-fit: contain;
                image-rendering: -webkit-optimize-contrast;
                image-rendering: crisp-edges;
            }

    @@media (max-width: 768px) {
        #download-card {
            min-width: 430px;
            width: 430px;
        }
    }

    #download-card .centered-info-block {
        margin-right: 0;
    }

    #download-card {
        gap: 8px;
    }

        #download-card .preview-logo-section {
            width: 100%;
        }

        #download-card .preview-logo {
            display: block;
            width: 100%;
            height: auto;
            max-height: 52px;
            object-fit: contain;
        }

        #download-card .bottom-info-section {
            display: flex;
            flex-direction: column;
            gap: 2px;
            flex-grow: 1;
        }

        #download-card .preview-info-col {
            gap: 2px;
            margin-top: auto;
        }

        #download-card .preview-email.long-mail a {
            font-size: 9px;
            letter-spacing: -0.5px;
        }

        #download-card .preview-dept {
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: normal;
            line-height: 1.1;
            max-height: calc(1.1em * 2);
            margin-bottom: 4px;
        }

        #download-card .preview-info-col {
            gap: 4px;
            align-items: flex-start;
        }

        #download-card .preview-email,
        #download-card .preview-phone {
            margin-left: 10px;
        }

            #download-card .preview-email a {
                white-space: normal;
                word-break: break-word;
            }

        #download-card .preview-left-section {
            overflow: visible;
        }

        #download-card .preview-name {
            display: inline-block;
            overflow: visible;
            white-space: nowrap;
            line-height: 1.25;
            padding-bottom: 2px;
            vertical-align: middle;
        }

    #download-card {
        overflow: visible !important;
        padding-bottom: 6px !important;
    }

        #download-card .preview-left-section {
            overflow: visible !important;
            padding-bottom: 2px;
        }

        #download-card .preview-name {
            display: inline-block;
            overflow: visible !important;
            white-space: nowrap;
            line-height: 1.35 !important;
            padding-bottom: 4px !important;
        }

        #download-card,
        #download-card .preview-left-section,
        #download-card .bottom-info-section,
        #download-card .centered_info_block,
        .preview_card {
            overflow: visible !important;
            transform: none !important;
            -webkit-transform: none !important;
            box-sizing: border-box !important;
        }

    #download-card {
        padding-bottom: 10px !important;
    }

        #download-card .preview-name {
            display: inline-block !important;
            overflow: visible !important;
            line-height: 1.35 !important;
            padding-bottom: 6px !important;
            vertical-align: baseline !important;
        }

        #download-card, #download-card * {
            clip-path: none !important;
            -webkit-clip-path: none !important;
            mask: none !important;
            -webkit-mask: none !important;
        }
</style>

@section Scripts {

    <script src="https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js" crossorigin="anonymous"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const lastNameInput = document.getElementById('LastName');
            if (lastNameInput) {
                lastNameInput.addEventListener('input', function () {
                    this.value = this.value.toUpperCase();
                });
            }

            const phoneFormatter = function (event) {
                const input = event.target;
                let numbers = input.value.replace(/\D/g, '');
                let formattedInput = '';
                if (numbers.length > 0) { formattedInput = numbers.substring(0, 4); }
                if (numbers.length > 4) { formattedInput += ' ' + numbers.substring(4, 7); }
                if (numbers.length > 7) { formattedInput += ' ' + numbers.substring(7, 9); }
                if (numbers.length > 9) { formattedInput += ' ' + numbers.substring(9, 11); }
                input.value = formattedInput;
            };

            const mobileInput = document.getElementById('MobilePhone');
            const landlineInput = document.getElementById('LandlinePhone');

            if (mobileInput) { mobileInput.addEventListener('input', phoneFormatter); }
            if (landlineInput) { landlineInput.addEventListener('input', phoneFormatter); }

            const mainForm = document.getElementById('qr-form');
            if (mainForm) {
                mainForm.addEventListener('submit', function () {
                    [mobileInput, landlineInput].forEach(input => {
                        if (input && input.value) {
                            let cleanedValue = input.value.replace(/\D/g, '');
                            if (cleanedValue.startsWith('0') && cleanedValue.length === 11) {
                                cleanedValue = cleanedValue.substring(1);
                            }
                            input.value = cleanedValue;
                        }
                    });
                });
            }
        });

        document.getElementById('download-btn')?.addEventListener('click', async function (e) {
            e.preventDefault();

            if (typeof html2canvas === 'undefined') {
                alert('İndirme kütüphanesi yüklenemedi. İnternet bağlantınızı veya içerik güvenlik politikasını kontrol edin.');
                return;
            }

            const cardElement = document.getElementById('download-card');
            if (!cardElement) return;

            const firstName = document.getElementById('FirstName')?.value || '';
            const lastName = document.getElementById('LastName')?.value || '';
            const fileName = `${firstName.trim()}_${lastName.trim()}_imza.png`.replace(/\s+/g, '_');

            if (document.fonts && document.fonts.ready) {
                try { await document.fonts.ready; } catch { }
            }

            cardElement.querySelectorAll('img').forEach(img => img.setAttribute('crossorigin', 'anonymous'));

            try {
                const canvas = await html2canvas(cardElement, {
                    backgroundColor: '#ffffff',
                    useCORS: true,
                    allowTaint: true,
                    scale: 3,
                    scrollX: 0,
                    scrollY: 0,
                    logging: false
                });

                if (canvas.toBlob) {
                    canvas.toBlob(function (blob) {
                        const link = document.createElement('a');
                        link.download = fileName;
                        link.href = URL.createObjectURL(blob);
                        document.body.appendChild(link);
                        link.click();
                        URL.revokeObjectURL(link.href);
                        link.remove();
                    }, 'image/png');
                } else {
                    const link = document.createElement('a');
                    link.download = fileName;
                    link.href = canvas.toDataURL('image/png');
                    link.click();
                }
            } catch (err) {
                console.error(err);
                alert('İmza görüntüsü oluşturulurken bir hata oluştu. Tarayıcı konsolunu kontrol edin.');
            }
        });
    </script>
}

@functions {
    public string FormatPhoneNumberForDisplay(string number)
    {
        if (string.IsNullOrWhiteSpace(number)) { return ""; }
        if (number.Length == 10) { number = "0" + number; }
        if (number.Length == 11)
        {
            return $"{number.Substring(0, 4)} {number.Substring(4, 3)} {number.Substring(7, 2)} {number.Substring(9, 2)}";
        }
        return number;
    }

    // Departman metinlerini temizleyip talimat/yorum içeren parçaları kaldırır.
    public string SanitizeDepartment(string input)
    {
        if (string.IsNullOrWhiteSpace(input)) return string.Empty;
        var s = input.Trim();

        // "3 satır ..." gibi ifadeleri kaldır
        s = System.Text.RegularExpressions.Regex.Replace(s, @"\d+\s*sat(ı|i)r.*", "", System.Text.RegularExpressions.RegexOptions.IgnoreCase);

        // "alt alta ..." gibi ifadeleri kaldır
        s = System.Text.RegularExpressions.Regex.Replace(s, @"alt\s*alta.*", "", System.Text.RegularExpressions.RegexOptions.IgnoreCase);

        // "gibi ifadeler ..." vb. ifadeleri kaldır
        s = System.Text.RegularExpressions.Regex.Replace(s, @"gibi\s+ifad.*", "", System.Text.RegularExpressions.RegexOptions.IgnoreCase);

        // Üç nokta veya aşırı noktalama temizle
        s = System.Text.RegularExpressions.Regex.Replace(s, @"\.\.\.+", "", System.Text.RegularExpressions.RegexOptions.IgnoreCase);

        // Parantez içindeki açıklamaları kaldır (ör. (yazılmalı))
        s = System.Text.RegularExpressions.Regex.Replace(s, @"[\[\(\{].*?[\]\)\}]", "", System.Text.RegularExpressions.RegexOptions.Singleline);

        // Fazla boşlukları tek boşluğa indir ve kırp
        s = System.Text.RegularExpressions.Regex.Replace(s, @"\s{2,}", " ").Trim();

        // Sonundaki noktalama işaretlerini temizle
        s = s.TrimEnd(new char[] { ',', ';', ':', '.' });

        return s;
    }

    // Geliştirilmiş satır bölme: önce doğal ayırıcılarla (nokta/virgül/kısaltma) böl, yetmezse kelime/karakter hedefli dengeli bölme yap.
    public string[] SplitIntoLines(string input, int lines)
    {
        if (string.IsNullOrWhiteSpace(input)) return Array.Empty<string>();
        input = input.Trim();

        // 1) Önce noktalama/kısaltma bazlı segmentlere ayır (örn. "Md.", "." sonrası)
        var segments = System.Text.RegularExpressions.Regex
            .Split(input, @"\s*(?:[;,\u2013\u2014\-\/]|\.\s+)\s*")
            .Select(s => s.Trim())
            .Where(s => !string.IsNullOrWhiteSpace(s))
            .ToList();

        if (segments.Count >= lines)
        {
            // Segmentleri mümkün olduğunca doğal parçalara göre grupla
            var resultSegs = new List<string>(lines);
            int baseChunk = segments.Count / lines;
            int rem = segments.Count % lines;
            int idx = 0;
            for (int i = 0; i < lines; i++)
            {
                int take = baseChunk + (i < rem ? 1 : 0);
                if (take <= 0) continue;
                resultSegs.Add(string.Join(" ", segments.Skip(idx).Take(take)));
                idx += take;
            }
            return resultSegs.Where(s => !string.IsNullOrWhiteSpace(s)).ToArray();
        }

        // 2) Yeterli segment yoksa kelimelere göre dengeli böl (kelime bütünlüğü korunur)
        var words = input.Split(' ', StringSplitOptions.RemoveEmptyEntries);
        if (words.Length <= lines)
        {
            // Çok kısaysa her kelime ayrı satır yerine tek satır olarak bırak
            return new[] { input };
        }

        int totalChars = input.Length;
        int target = Math.Max(10, (int)Math.Ceiling((double)totalChars / lines)); // aşırı küçük hedefleri engelle

        var result = new List<string>();
        var currentWords = new List<string>();
        int currentLen = 0;

        for (int i = 0; i < words.Length; i++)
        {
            var w = words[i];
            int wLen = w.Length + (currentWords.Count > 0 ? 1 : 0); // boşluk dahil
            // Eğer mevcut satıra eklemek hedefi aşarsa ve henüz gerekli satır sayısına ulaşmadıysak yeni satır başlat
            if (currentLen + wLen > target && result.Count < lines - 1)
            {
                result.Add(string.Join(" ", currentWords));
                currentWords.Clear();
                currentLen = 0;
            }
            currentWords.Add(w);
            currentLen += wLen;
        }

        if (currentWords.Count > 0)
            result.Add(string.Join(" ", currentWords));

        // Eğer çıkan satır sayısı istenenden az ise mümkün olduğunca parçala (kelime bazlı)
        if (result.Count < lines)
        {
            // basit yeniden dağıtma: bölünmüş son satırı alıp gerekirse ikiye ayır
            var flatWords = string.Join(" ", result).Split(' ', StringSplitOptions.RemoveEmptyEntries).ToList();
            result.Clear();
            int baseW = flatWords.Count / lines;
            int remW = flatWords.Count % lines;
            int idx = 0;
            for (int i = 0; i < lines; i++)
            {
                int take = baseW + (i < remW ? 1 : 0);
                if (take <= 0) continue;
                result.Add(string.Join(" ", flatWords.Skip(idx).Take(take)));
                idx += take;
            }
        }

        return result.Where(s => !string.IsNullOrWhiteSpace(s)).ToArray();
    }
}